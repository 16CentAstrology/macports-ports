Patch for building with openssl v3, merged by upstream:
https://gitlab.torproject.org/tpo/core/tor/-/merge_requests/390//diffs#85a4a627d1a37ca52d261a256f8b55dcb8294b31
--- src/lib/tls/tortls_nss.c.orig	2021-11-08 09:21:57.000000000 -0500
+++ src/lib/tls/tortls_nss.c	2021-11-08 09:21:19.000000000 -0500
@@ -646,13 +646,6 @@
   /* We don't support renegotiation with NSS. */
 }

-void
-tor_tls_assert_renegotiation_unblocked(tor_tls_t *tls)
-{
-  tor_assert(tls);
-  /* We don't support renegotiation with NSS. */
-}
-
 int
 tor_tls_get_pending_bytes(tor_tls_t *tls)
 {
--- src/lib/tls/tortls_openssl.c.orig	2021-11-08 09:22:06.000000000 -0500
+++ src/lib/tls/tortls_openssl.c	2021-11-08 09:21:23.000000000 -0500
@@ -1190,19 +1190,6 @@
 #endif
 }

-/** Assert that the flags that allow legacy renegotiation are still set */
-void
-tor_tls_assert_renegotiation_unblocked(tor_tls_t *tls)
-{
-#if defined(SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) && \
-  SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION != 0
-  long options = SSL_get_options(tls->ssl);
-  tor_assert(0 != (options & SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION));
-#else
-  (void) tls;
-#endif /* defined(SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION) && ... */
-}
-
 /**
  * Tell the TLS library that the underlying socket for <b>tls</b> has been
  * closed, and the library should not attempt to free that socket itself.
