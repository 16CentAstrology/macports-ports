# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   makefile    1.0

name                        lua
conflicts                   lua50
version                     5.3.6
revision                    1
categories                  lang
license                     MIT
maintainers                 {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
description                 powerful, lightweight programming language
long_description            Lua is a {*}${description} designed for \
                            extending applications. Lua is also frequently used as a general-purpose, \
                            standalone language.

homepage                    https://www.lua.org
master_sites                ${homepage}/ftp

checksums                   rmd160  cc715df991bccaec75a022404902200d984b002e \
                            sha256  fc5fd69bb8736323f026672b1b7235da613d7177e72558893a0bdcd320466d60 \
                            size    303770

subport                     ${name} {
    patchfiles              patch-src-Makefile.diff

    # considering the myriad of compatibility subports, it is not clear this is desirable
    # added in https://github.com/macports/macports-ports/commit/6fc7473672d8bdcb06b6726cb224b860b204757d
    #
    # option is removed in version 5.4
    configure.cppflags-append   -DLUA_COMPAT_5_1
}

subport                     lua54 {
    version                 5.4.4
    revision                1
    checksums               rmd160  fc2d63300da19e1c2cdb35011034d44cfd590b0e \
                            sha256  164c7849653b80ae67bec4b7473b884bf5cc8d2dca05653475ec2ed27b9ebf61 \
                            size    360876

    patchfiles              patch-src-Makefile-54.diff
}

subport                     lua53 {
    version                 5.3.6
    revision                1
    checksums               rmd160  cc715df991bccaec75a022404902200d984b002e \
                            sha256  fc5fd69bb8736323f026672b1b7235da613d7177e72558893a0bdcd320466d60 \
                            size    303770

    patchfiles              patch-src-Makefile-53.diff
}

subport                     lua52 {
    version                 5.2.4
    revision                5
    checksums               rmd160  3bad2da85f354132da6a53b45882006f0a451b5c \
                            sha256  b9e2e4aad6789b3b63a056d442f7b39f0ecfca3ae0f1fc0ae4e9614401b69f4b \
                            size    252651

    patchfiles              patch-src-Makefile-52.diff

    # this is needed only on lua52, to fix build in 10.4
    # this patch is already in lua53+ and works on all tested systems
    patchfiles-append       patch-src-liolib-tiger.diff
}

subport                     lua51 {
    version                 5.1.5
    revision                7
    checksums               rmd160  b0c2234675335a8bf158a125b6778cf800c754a0 \
                            sha256  2640fc56a795f29d28ef15e13c34a47e223960b0240e8cb0a82d9b0738695333 \
                            size    221213

    patchfiles              patch-src-Makefile-51.diff
}

# TODO: also add lua50 here

set branch                  [join [lrange [split ${version} .] 0 1] .]

use_parallel_build          no

depends_lib                 port:readline

if {${os.platform} eq "darwin"} {
    build.target            macosx
} elseif {[vercmp ${version} >= 5.4]} {
    build.target            linux-readline
} else {
    build.target            linux
}
build.target-prepend        echo
destroot.target-prepend     echo

if {${os.platform} ne "darwin"} {
    configure.cflags-append -fPIC
    build.args-append       MYLIBS=-ltermcap
}

test.run                    yes
test.args-append            DYLD_LIBRARY_PATH=${worksrcpath}/src

post-extract {
    xinstall -m 0644        ${filespath}/COPYRIGHT \
                            ${worksrcpath}
}

post-patch { if {[file exists ${worksrcpath}/src/luaconf.h]} {
    reinplace               "s|/usr/local|${prefix}|g" \
                            ${worksrcpath}/src/luaconf.h
}}

if {${os.platform} eq "darwin"} {
    set dylib_suffix        dylib
} else {
    set dylib_suffix        so
}

build.args-append           MACPORTS_PREFIX=${prefix} \
                            MYCFLAGS="\$CPPFLAGS \$CFLAGS" \
                            MYLDFLAGS="\$LDFLAGS" \
                            MACPORTS_VERSION=${version}

destroot.args-append        INSTALL_TOP=${destroot}${prefix} \
                            MACPORTS_VERSION=${version} \
                            INSTALL_MAN=${destroot}${prefix}/share/man/man1

if {${subport} ne ${name}} {
    build.args-append       MACPORTS_SHARED_LIB=liblua-${branch}.${dylib_suffix} \
                            MACPORTS_BRANCH=${branch} \
                            TO_LIB=liblua-${branch}.a \
                            LUA_A=liblua-${branch}.a

    destroot.args-append    MACPORTS_SHARED_LIB=liblua-${branch}.${dylib_suffix} \
                            INSTALL_INC=${destroot}${prefix}/include/lua-${branch} \
                            TO_LIB=liblua-${branch}.a \
                            LUA_A=liblua-${branch}.a
} else {
    build.args-append       MACPORTS_SHARED_LIB=liblua.${dylib_suffix} \
                            MACPORTS_BRANCH=${branch}

    destroot.args-append    MACPORTS_SHARED_LIB=liblua.${dylib_suffix}
}

if {${os.platform} eq "darwin" && ${subport} eq ${name}} {
    post-destroot {
        xinstall -m 0755    ${worksrcpath}/src/liblua.dylib \
                            ${destroot}${prefix}/lib/
        ln -s               liblua.dylib \
                            ${destroot}${prefix}/lib/liblua.${branch}.dylib
        ln -s               liblua.dylib \
                            ${destroot}${prefix}/lib/liblua.${version}.dylib
    }
} elseif {${os.platform} eq "darwin"} {
    post-destroot {
        xinstall -d -m 0755 ${destroot}${prefix}/lib/lua-${branch}
        xinstall -m 0755    ${worksrcpath}/src/liblua-${branch}.dylib \
                            ${destroot}${prefix}/lib/lua-${branch}
    }
} elseif {${subport} eq ${name}} {
    post-destroot {
        xinstall -m 0755    ${worksrcpath}/src/liblua.so \
                            ${destroot}${prefix}/lib/
        ln -s               liblua.so \
                            ${destroot}${prefix}/lib/liblua-${branch}.so
        ln -s               liblua.dylib \
                            ${destroot}${prefix}/lib/liblua-${version}.so
    }
} else {
    post-destroot {
        xinstall -d -m 0755 ${destroot}${prefix}/lib/lua-${branch}
        xinstall -m 0755    ${worksrcpath}/src/liblua-${branch}.so \
                            ${destroot}${prefix}/lib/lua-${branch}
    }
}

post-destroot {
    # documentation
    set docdir ${prefix}/share/doc/${subport}

    xinstall -d -m 0755     ${destroot}${docdir}
    foreach f {COPYRIGHT README} { if {[file exists ${worksrcpath}/${f}]} {
        xinstall -m 0644    ${worksrcpath}/${f} \
                            ${destroot}${docdir}
    }}

    xinstall -d -m 0755 ${destroot}${docdir}/html
    foreach f [glob -directory ${worksrcpath}/doc *.html *.css *.gif *.png] {
        xinstall -m 0644    ${f} \
                            ${destroot}${docdir}/html
    }

    if {${subport} ne ${name}} {
        set pcinfile        lua_branch.pc
        set pcfile          lua-${branch}.pc
    } else {
        set pcinfile        lua.pc
        set pcfile          lua.pc
    }

    # install pkgconfig file
    xinstall -m 0644        ${filespath}/${pcinfile} \
                            ${destroot}${prefix}/lib/pkgconfig/${pcfile}
    foreach {var val} "@BRANCH@ ${branch} @VERSION@ ${version} @PREFIX@ ${prefix}" {
        reinplace           "s|${var}|${val}|g" \
                            ${destroot}${prefix}/lib/pkgconfig/${pcfile}
    }

    if {${subport} ne ${name}} {
        # version executable and man pages files
        foreach f [glob ${destroot}${prefix}/bin/*] {
            move $f ${f}${branch}
        }
        foreach f [glob ${destroot}${prefix}/share/man/man1/*] {
            move $f [file rootname $f]${branch}[file extension $f]
        }
    }
}

livecheck.type              regex
livecheck.url               ${master_sites}
# main lua port livecheck shouldn't be limited by the branch
if {${subport} ne ${name}} {
    livecheck.regex         lua-(${branch}\.\[0-9]+)
} else {
    livecheck.regex         {lua-(\d+(?:\.\d+)*)}
}
