Patch to avoid the error message below:

subfams.cpp:4:13: error: functions that differ only in their return type cannot be overloaded
const float INFINITY = float(1e29);
      ~~~~~ ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h:68:21: note: expanded from macro 'INFINITY'
#define INFINITY    HUGE_VALF
                    ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h:58:28: note: expanded from macro 'HUGE_VALF'
#   define    HUGE_VALF    __builtin_huge_valf()
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/limits:332:90: note: previous implicit declaration is here
    _LIBCPP_INLINE_VISIBILITY static _LIBCPP_CONSTEXPR type infinity() _NOEXCEPT {return __builtin_huge_valf();}
                                                                                         ^
1 error generated.

--- subfams.cpp.orig	2021-05-09 20:35:25.000000000 -0400
+++ subfams.cpp	2021-05-09 20:35:39.000000000 -0400
@@ -1,7 +1,6 @@
 #include "muscle.h"
 #include "distfunc.h"
 
-const float INFINITY = float(1e29);
 const unsigned NILL = uInsane;
 
 static float *ShortestPathEstimate;
