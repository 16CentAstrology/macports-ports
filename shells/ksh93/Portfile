# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           deprecated 1.0
PortGroup           github 1.0

epoch               1
github.setup        att ast 2012-08-01
name                ksh93
revision            1
conflicts           ksh ksh-devel pdksh
categories          shells
platforms           darwin freebsd
maintainers         nomaintainer
license             EPL-1

description         The AT&T Korn shell

long_description    The official version of ksh-93, by David Korn and \
                    AT&T research.

master_sites        macports_distfiles
distfiles           ast-ksh.$version.tgz \
                    INIT.$version.tgz
checksums           ast-ksh.$version.tgz \
                    rmd160  74bf4735182a6b527e3eb5c5ae6d7854ea72d78b \
                    sha256  e6192cfa52a6a9fd20618cbaf3fa81f0cc9fd83525500757e83017275e962851 \
                    size    2053532 \
                    INIT.$version.tgz \
                    rmd160  48f1830bc85a26125dd986256d38be435668d445 \
                    sha256  c40cf57e9b2186271a9c362a560aa4a6e25ba911a8258ab931d2bbdbce44cfe5 \
                    size    377769

extract.mkdir       yes

patchfiles-append   ksh-20120801-cve-2019-14868.patch

use_configure       no

build.cmd           bin/package
build.target        make

# Build output is misleading: You will see "CC=cc" and builds being done
# by "cc", but that "cc" is a wrapper script created by the build system
# which in turn calls the compiler we specify here.
build.env           "CC=${configure.cc}" \
                    "CCFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                    "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]" \
                    "NPROC=${build.jobs}"
build.args          SHELL="/bin/sh"

post-build {
    # The build system does not exit with an error if the build fails.
    # The following is adapted from Apple's ksh build Makefile.
    if {[catch {system -W ${build.dir} "fgrep '*** exit code' arch/${ksharch}/lib/package/gen/make.out && exit 1 || exit 0"}]} {
        return -code error "build failed"
    }
}

destroot {
    xinstall -m 0755 ${build.dir}/arch/${ksharch}/bin/ksh \
        ${destroot}${prefix}/bin
    xinstall -m 0444 ${build.dir}/arch/${ksharch}/man/man1/sh.1 \
        ${destroot}${prefix}/share/man/man1/ksh.1
}

options ksharch
default ksharch {[ksharch]}

proc ksharch {} {
    global build.cmd build.dir build.env
    return [exec env {*}${build.env} ${build.dir}/${build.cmd} host type]
}

deprecated.maximum_osmajor  12
deprecated.upstream_support no
livecheck.type      none
